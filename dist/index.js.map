{"version":3,"file":"index.js","mappings":"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","sources":["webpack://comparator.js/./src/comparator.js","webpack://comparator.js/./src/fold.js","webpack://comparator.js/./src/get.js","webpack://comparator.js/./src/has.js","webpack://comparator.js/./src/mapping.js","webpack://comparator.js/./src/set.js","webpack://comparator.js/./src/unfold.js","webpack://comparator.js/./src/unset.js","webpack://comparator.js/external commonjs \"diff\"","webpack://comparator.js/webpack/bootstrap","webpack://comparator.js/./src/index.js"],"sourcesContent":["/* eslint-disable eqeqeq */\nfunction Equality() {}\n\nEquality.false = () => {\n  return false\n}\n\nEquality.true = () => {\n  return true\n}\n\nEquality.NOT_EQUAL = 0\nEquality.STRICT = 1\nEquality.LOOSE = 2\nEquality.STRUCTURE = 3\n\n/*\n\t0 - notEqual,\n\t1 - strict\n\t2 - loose\n\t3 - structure\n*/\n\n// eslint-disable-next-line no-unused-vars\nEquality.diffValue = (a, b, _comprator) => {\n  if (a === b)\n    return {\n      result: Equality.STRICT,\n      value: b,\n    }\n  if (a != null && b != null && a.valueOf() === b.valueOf())\n    return {\n      result: Equality.LOOSE,\n      from: a,\n      to: b,\n    }\n  return {\n    result: Equality.NOT_EQUAL,\n    from: a,\n    to: b,\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nEquality.diffString = (a, b, _comprator) => {\n  if (a === b)\n    return {\n      result: Equality.STRICT,\n      value: b,\n    }\n  if (a.toString() == b.toString())\n    return {\n      result: Equality.LOOSE,\n      from: a,\n      to: b,\n    }\n  return {\n    result: Equality.NOT_EQUAL,\n    from: a,\n    to: b,\n  }\n}\n\n// diff содержит только поля которые изменились ??\n// eslint-disable-next-line consistent-return\nEquality.eqObject = config => {\n  if (config.strict) {\n    // строгое равенство структура + данные\n    return (source, dest, compare) => {\n      if (source == dest) return true\n      const ks = Object.keys(source)\n      const kd = Object.keys(dest)\n      let key\n      const so = ks.toString() == kd.toString()\n      if (so) {\n        for (let i = 0, len = ks.length; i < len; i += 1) {\n          key = ks[i]\n          if (!compare(source[key], dest[key])) return false\n        }\n      } else {\n        return false\n      }\n      return true\n    }\n  }\n\n  if (config.loose) {\n    // второй объект может содержать дополнительные поля, но мы их не рассматриваем.\n    // структура и равенство*(compare) того что есть с тем что дали\n    return (source, dest, compare) => {\n      if (source == dest) return true\n      const ks = Object.keys(source)\n      let key\n      for (let i = 0, len = ks.length; i < len; i += 1) {\n        key = ks[i]\n        if (!compare(source[key], dest[key])) return false\n      }\n      return true\n    }\n  }\n\n  if (config.structure) {\n    // проверяем что структура объекта такая же\n    // второй объект может содержать новые поля,\n    // и новые данные, но структура та же\n    return (source, dest, compare) => {\n      if (source == dest) return true\n      const ks = Object.keys(source)\n      const kd = Object.keys(dest)\n      let i\n      let len\n      let key\n      if (ks.length > kd.length) return false\n      const so = ks.toString() == kd.toString()\n      if (so) {\n        for (i = 0, len = ks.length; i < len; i += 1) {\n          key = ks[i]\n          if (!compare(source[key], dest[key])) return false\n        }\n      } else {\n        const ksd = Object.keys(source).sort()\n        const passed = {}\n        for (i = 0, len = ksd.length; i < len; i += 1) {\n          key = ksd[i]\n          passed[key] = 1\n          if (!compare(source[key], dest[key])) return false\n        }\n        if (Object.keys(passed).sort().toString() != ksd.toString())\n          return false\n      }\n      return true\n    }\n  }\n\n  if (config.diff) {\n    // full processing\n    // здесь мы должны получить все варианты сразу\n    // strict\n    // loose\n    // structure\n    // diff\n    return (source, dest, compare) => {\n      if (source == dest)\n        return {\n          result: 1,\n          value: dest,\n        }\n      const result = {}\n      let i\n      let len\n      let key\n      let ret\n      const ks = Object.keys(source)\n      const kd = Object.keys(dest)\n      const so = ks.toString() == kd.toString()\n      if (so) {\n        result.result = 1\n        for (i = 0, len = ks.length; i < len; i += 1) {\n          key = ks[i]\n          result[key] = compare(source[key], dest[key])\n          ret = result[key]\n          if (ret.result === 0) ret.result = 3\n          if (ret.result > 0 && result.result < ret.result)\n            result.result = ret.result\n        }\n      } else {\n        result.result = 1\n        const ksd = Object.keys(source).sort()\n        const kss = Object.keys(dest).sort()\n        result.reorder = ks.toString() != kd.toString()\n        const passed = {}\n        let srcI\n        let dstI\n        for (i = 0, len = ksd.length; i < len; i += 1) {\n          key = ksd[i]\n          passed[key] = true\n          srcI = ks.indexOf(key)\n          dstI = kd.indexOf(key)\n          if (dstI >= 0) {\n            result[key] = {}\n            if (srcI != dstI)\n              result[key].order = {\n                from: ks.indexOf(key),\n                to: kd.indexOf(key),\n              }\n            result[key].value = compare(source[key], dest[key])\n            ret = result[key].value\n            if (ret.result === 0) ret.result = 3\n            // structure of current object isn't changed\n            if (ret.result > 0 && result.result < ret.result)\n              result.result = ret.result\n          } else {\n            // removed items\n            result.result = 0\n            if (!result.removed) result.removed = {}\n            result.removed[key] = {\n              order: ks.indexOf(key),\n              value: source[key],\n            }\n          }\n        }\n        // new items\n        for (i = 0, len = kss.length; i < len; i += 1) {\n          key = kss[i]\n          if (passed[key] !== true) {\n            // if (result.result > 0) result.result = 2;\n            passed[key] = true\n            if (!result.inserted) result.inserted = {}\n            result.inserted[key] = {\n              order: kd.indexOf(key),\n              value: dest[key],\n            }\n          }\n        }\n      }\n      return result\n    }\n  }\n}\n\n// eslint-disable-next-line consistent-return\nEquality.eqArray = config => {\n  // strict -- полное равенство\n  // loose -- объекты перемешаны, пересортированы, но все на месте\n  // structure -- объекты на своих местах и каждый имеет свою структуру.\n  // diff\n  // diff reorder массивы простых значений только если\n  // нужно придумать условия\n  // 1. когда длинна одинаковая\n  // 2. когда меншье стала\n  // 3. когда больше стала\n  // или забить :)\n  // сделать для каждого типа свою функцию как в объекте\n  if (config.strict || config.structure) {\n    return (source, dest, compare) => {\n      if (source == dest)\n        return {\n          result: 1,\n          value: dest,\n        }\n      if (source && dest && source.length == dest.length) {\n        for (let i = 0, len = source.length; i < len; i += 1) {\n          if (!compare(source[i], dest[i])) return false\n        }\n        return true\n      }\n      return false\n    }\n  }\n  if (config.loose) {\n    return (source, dest, compare) => {\n      if (source == dest)\n        return {\n          result: 1,\n          value: dest,\n        }\n      let val\n      let i\n      let len\n      const foundItems = []\n      foundItems.length =\n        source.length > dest.length ? source.length : dest.length\n      if (source && dest && source.length <= dest.length) {\n        for (i = 0, len = source.length; i < len; i += 1) {\n          val = source[i]\n          let rec\n          let cmpRes\n          let found\n          for (let j = 0, dstlen = dest.length; j < dstlen; j += 1) {\n            rec = dest[j]\n            cmpRes = compare(val, rec)\n            if (cmpRes) {\n              found = rec\n              if (!foundItems[j]) break\n            } else {\n              found = undefined\n            }\n          }\n          if (!found) return false\n        }\n        return true\n      }\n      return false\n    }\n  }\n  if (config.diff) {\n    return (source, dest, compare) => {\n      if (source == dest)\n        return {\n          result: 1,\n          value: dest,\n        }\n\n      if (JSON.stringify(source) == JSON.stringify(dest))\n        return {\n          result: 1,\n          value: dest,\n        }\n\n      const result = {\n        result: 1,\n        reorder: true,\n      }\n\n      function compareRatings(a, b) {\n        return a.cmpRes.changeRating < b.cmpRes.changeRating\n      }\n\n      let val\n      let i\n      let len\n      const foundItems = []\n      foundItems.length =\n        source.length > dest.length ? source.length : dest.length\n      let srcI\n      let dstI\n      for (i = 0, len = source.length; i < len; i += 1) {\n        val = source[i]\n        let rec\n        let cmpRes\n        let found\n        const approx = []\n        for (let j = 0, dstlen = dest.length; j < dstlen; j += 1) {\n          rec = dest[j]\n          cmpRes = compare(val, rec)\n          if (cmpRes.result > 0 && cmpRes.result < 3) {\n            found = rec\n            dstI = dest.indexOf(rec)\n            if (!foundItems[j]) break\n          } else if (cmpRes.result === 3) {\n            approx.push({\n              found: rec,\n              dstI: dest.indexOf(rec),\n              cmpRes,\n            })\n          } else {\n            found = undefined\n            dstI = -1\n          }\n        }\n        srcI = source.indexOf(val)\n\n        if (!found && approx.length > 0) {\n          // debugger\n          approx.sort(compareRatings)\n          const aFound = approx.shift()\n          found = aFound.found\n          dstI = aFound.dstI\n          cmpRes = aFound.cmpRes\n          approx.length = 0\n        }\n\n        if (found) {\n          result[i] = {}\n          if (srcI != dstI) {\n            result[i].order = {\n              from: srcI,\n              to: dstI,\n            }\n          }\n          foundItems[dstI] = true\n          result[i].value = cmpRes\n          if (cmpRes.result > 1 && result.result !== 0)\n            result.result = cmpRes.result\n        } else {\n          result.result = 0\n          if (!result.removed) result.removed = {}\n          result.removed[i] = {\n            order: dstI,\n            value: val,\n          }\n        }\n      }\n      for (i = 0, len = dest.length; i < len; i += 1) {\n        val = dest[i]\n        if (foundItems[i] !== true) {\n          if (!result.inserted) result.inserted = {}\n          // if (result.result > 0) result.result = 2;\n          result.inserted[i] = {\n            order: i,\n            value: val,\n          }\n        }\n      }\n\n      if (!config.diff) {\n        // let res = true\n        // for (const v in result) {\n        //   res = res && result[v]\n        //   if (!res) break\n        // }\n        // return res\n        return Object.keys(result).every(v => result[v])\n      }\n      return result\n    }\n  }\n}\n\nconst Compariable = require('./mapping').cmp(Equality)\n\n// eslint-disable-next-line consistent-return\nfunction getComparator(a, b, type) {\n  let cmpr = Compariable[a][b]\n  let res = cmpr ? cmpr[type] : null\n  if (!res) {\n    cmpr = Compariable[b][a]\n    res = cmpr ? cmpr[type] : null\n  }\n  if (!res) {\n    // eslint-disable-next-line default-case\n    switch (type) {\n      case 'strict':\n        return Equality.false\n      case 'loose':\n        return Equality.false\n      case 'structure':\n        return Equality.false\n      case 'diff':\n        return Equality.diffValue\n    }\n  } else return res\n}\n\nfunction getType(v) {\n  return Object.prototype.toString.call(v).match(/\\[object (.+)\\]/)[1]\n}\n\nfunction strictEq(a, b) {\n  const t0 = getType(a)\n  const t1 = getType(b)\n  const fnc = getComparator(t0, t1, 'strict')\n  return fnc(a, b, strictEq)\n}\n\nfunction looseEq(a, b) {\n  const t0 = getType(a)\n  const t1 = getType(b)\n  const fnc = getComparator(t0, t1, 'loose')\n  return fnc(a, b, looseEq)\n}\n\nfunction structureEq(a, b) {\n  const t0 = getType(a)\n  const t1 = getType(b)\n  const fnc = getComparator(t0, t1, 'structure')\n  return fnc(a, b, structureEq)\n}\n\nfunction diff(a, b) {\n  const t0 = getType(a)\n  const t1 = getType(b)\n  const fnc = getComparator(t0, t1, 'diff')\n  return fnc(a, b, diff)\n}\n\nexports.getComparator = getComparator\nexports.strictEq = strictEq\nexports.looseEq = looseEq\nexports.structureEq = structureEq\nexports.diff = diff\n","const { set } = require('./set')\n\nfunction fold(data) {\n  const result = {}\n  const keys = Object.keys(data)\n  for (let i = 0, len = keys.length; i < len; i += 1) {\n    set(result, keys[i], data[keys[i]])\n  }\n  return result\n}\n\nexports.fold = fold\n","function get(data, path) {\n  if (Array.isArray(data)) {\n    const result = []\n    for (let i = 0, len = data.length; i < len; i += 1) {\n      result.push(get(data[i], path))\n    }\n    return result\n  }\n  if (typeof data === 'object') {\n    if (data[path] === undefined) {\n      const parts = path.split('.')\n      if (Array.isArray(parts)) {\n        const curr = parts.shift()\n        if (parts.length > 0) {\n          return get(data[curr], parts.join('.'))\n        }\n        return data[curr]\n      }\n    }\n    return data[path]\n  }\n  return data\n}\n\nexports.get = get\n","function has(data, path) {\n  if (Array.isArray(data)) {\n    const result = []\n    for (let i = 0, len = data.length; i < len; i += 1) {\n      result.push(has(data[i], path))\n    }\n    return result\n  } else if (typeof data === 'object') {\n    if (data[path] === undefined) {\n      const parts = path.split('.')\n      if (Array.isArray(parts)) {\n        const curr = parts.shift()\n        if (parts.length > 0) {\n          return has(data[curr], parts.join('.'))\n        }\n        return curr in data\n      }\n    }\n    return curr in data\n  } else return true\n}\n\nexports.has = has\n","/* eslint-disable eqeqeq */\n\n// default strict = eq.false;\n// default loose = eq.false;\n// default structure = eq.false;\n// default diff =eq.diffValue\n\n// проверить работу, посде доделать адресно для каждого типа\n// так чтобы знать какой параметр каким приходит\n// чтобы было меньше проверок\nconst jsdiff = require('diff')\n\nexports.cmp = eq => {\n  return {\n    Boolean: {\n      Boolean: {\n        strict(a, b) {\n          return a === b\n        },\n        loose(a, b) {\n          return a == b\n        },\n        structure: eq.true,\n      },\n      Number: {\n        loose(a, b) {\n          return a == b\n        },\n      },\n      String: {\n        loose(a, b) {\n          const bFalse = /false/i.test(b) || /0/.test(b)\n          const bTrue = /true/i.test(b) || /1/.test(b)\n          if (a) return a === bTrue\n          return a === !bFalse\n        },\n        diff(a, b) {\n          let res\n          const bFalse = /false/i.test(b) || /0/.test(b)\n          const bTrue = /true/i.test(b) || /1/.test(b)\n          if (a) res = a === bTrue\n          else res = a === !bFalse\n          if (res)\n            return {\n              result: eq.LOOSE,\n              from: a,\n              to: b,\n            }\n          return {\n            result: eq.NOT_EQUAL,\n            from: a,\n            to: b,\n          }\n        },\n      },\n      Undefined: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n      Null: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n    },\n    Number: {\n      Number: {\n        strict(a, b) {\n          return a === b\n        },\n        loose(a, b) {\n          return a == b\n        },\n        structure: eq.true,\n      },\n      String: {\n        loose(a, b) {\n          return a == b\n        },\n      },\n      Date: {\n        strict(a, b) {\n          return a == b\n        },\n        loose(a, b) {\n          return a.valueOf() == b.valueOf()\n        },\n        structure: eq.true,\n      },\n      Null: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n      Undefined: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n      Object: {\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n      },\n      Function: {\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n      },\n    },\n    String: {\n      Boolean: {\n        loose(a, b) {\n          const aFalse = /false/i.test(a) || /0/.test(a)\n          const aTrue = /true/i.test(a) || /1/.test(a)\n          if (b) return b === aTrue\n          return b === !aFalse\n        },\n        diff(a, b) {\n          let res\n          const aFalse = /false/i.test(a) || /0/.test(a)\n          const aTrue = /true/i.test(a) || /1/.test(a)\n          if (b) res = b === aTrue\n          else res = b === !aFalse\n          if (res)\n            return {\n              result: eq.LOOSE,\n              from: a,\n              to: b,\n            }\n          return {\n            result: eq.NOT_EQUAL,\n            from: a,\n            to: b,\n          }\n        },\n      },\n      String: {\n        strict(a, b) {\n          return a == b\n        },\n        loose(a, b) {\n          return a == b\n        },\n        structure: eq.true,\n        diff(a, b) {\n          if (a == b)\n            return {\n              result: 1,\n              value: b,\n            }\n          const result = jsdiff.diffLines(a, b)\n          const srcLen = a.length\n          const dstLen = b.length\n          let unchangedCnt = 0\n          let removedCnt = 0\n          let removedLen = 0\n          let addedCnt = 0\n          let addedLen = 0\n\n          result.forEach(part => {\n            if (part.added) {\n              addedCnt += 1\n              addedLen += part.value.length\n            } else if (part.removed) {\n              removedCnt += 1\n              removedLen += part.value.length\n            } else {\n              unchangedCnt += 1\n              // unchangedLen += part.value.length\n            }\n          })\n          if (unchangedCnt === 1 && addedCnt === 0 && removedCnt === 0) {\n            return {\n              result: eq.LOOSE,\n              diff: 'lines',\n              changes: result,\n            }\n          }\n          if (unchangedCnt > 0 && (addedCnt > 0 || removedCnt > 0)) {\n            return {\n              result: eq.STRUCTURE,\n              diff: 'lines',\n              changes: result,\n              /* srcLen: ((addedLen > removedLen) ? dstLen : srcLen),\n\t\t\t\t\t\t\tremovedLen: removedLen,\n\t\t\t\t\t\t\taddedLen: addedLen, */\n              changeRating:\n                Math.abs(addedLen - removedLen) /\n                (addedLen > removedLen ? dstLen : srcLen),\n            }\n          }\n\n          return {\n            result: eq.NOT_EQUAL,\n            diff: 'lines',\n            from: a,\n            to: b,\n          }\n        },\n      },\n      RegExp: {\n        strict(a, b) {\n          return a == b\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.false,\n      },\n      Date: {\n        strict(a, b) {\n          if (a.toString() == b.toString()) return true\n\n          if (a.toJSON || b.toJSON) {\n            let v0\n            let v1\n            if (a.toJSON) v0 = a.toJSON()\n            else v0 = a.toString()\n\n            if (b.toJSON) v1 = b.toJSON()\n            else v1 = b.toString()\n            return v0 == v1\n          }\n          return false\n        },\n        loose(a, b) {\n          if (a.toString() == b.toString()) return true\n\n          if (a.toJSON || b.toJSON) {\n            let v0\n            let v1\n            if (a.toJSON) v0 = a.toJSON()\n            else v0 = a.toString()\n\n            if (b.toJSON) v1 = b.toJSON()\n            else v1 = a.toString()\n            return v0 == v1\n          }\n          return false\n        },\n        structure: eq.true,\n        diff(a, b) {\n          if (a.toString() == b.toString())\n            return {\n              result: eq.STRICT,\n              value: b.toString(),\n            }\n\n          if (a.toJSON || b.toJSON) {\n            let v0\n            let v1\n            if (a.toJSON) v0 = a.toJSON()\n            else v0 = a.toString()\n\n            if (b.toJSON) v1 = b.toJSON()\n            else v1 = b.toString()\n\n            if (v0 == v1)\n              return {\n                result: eq.LOOSE,\n                from: a,\n                to: b,\n              }\n          }\n\n          return {\n            result: eq.NOT_EQUAL,\n            from: a,\n            to: b,\n          }\n        },\n      },\n      Null: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n      Undefined: {\n        loose(a, b) {\n          return !a == !b\n        },\n      },\n      Array: {\n        strict(a, b) {\n          return a == b\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.true,\n      },\n      Object: {\n        strict(a, b) {\n          return a.toString() == b.toString()\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.false,\n      },\n      Function: {\n        strict(a, b) {\n          return a.toString() == b.toString()\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.true,\n      },\n    },\n    RegExp: {\n      // ввести сравнение регулярок с json версией mongoosejs\n      RegExp: {\n        strict(a, b) {\n          return a === b\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.true,\n        diff: eq.diffString,\n      },\n      Undefined: {\n        loose(a, b) {\n          if (a instanceof RegExp) return a.test(b)\n          return b.test(a)\n        },\n      },\n      Null: {\n        loose(a, b) {\n          if (a instanceof RegExp) {\n            return a.test(b)\n          }\n          return b.test(a)\n        },\n      },\n      Object: {\n        strict(a, b) {\n          return a.toString() == b.toString()\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n      },\n    },\n    Date: {\n      Date: {\n        strict(a, b) {\n          if (a === b) return true\n          return a.toString() == b.toString()\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.true,\n      },\n      Object: {\n        strict(a, b) {\n          return a.toString() == b.toString()\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.false,\n        diff: eq.diffString,\n      },\n    },\n    Undefined: {\n      Undefined: {\n        strict: eq.true,\n        loose: eq.true,\n        structure: eq.true,\n        diff() {\n          return {\n            result: eq.STRICT,\n          }\n        },\n      },\n      Null: {\n        strict: eq.true,\n        loose: eq.true,\n        structure: eq.true,\n        diff() {\n          return {\n            result: eq.STRICT,\n            value: null,\n          }\n        },\n      },\n    },\n    Null: {\n      Null: {\n        strict: eq.true,\n        loose: eq.true,\n        structure: eq.true,\n        diff() {\n          return {\n            result: eq.STRICT,\n            value: null,\n          }\n        },\n      },\n    },\n    Array: {\n      Array: {\n        strict: eq.eqArray({\n          strict: true,\n        }),\n        loose: eq.eqArray({\n          loose: true,\n        }),\n        structure: eq.eqArray({\n          structure: true,\n        }),\n        diff: eq.eqArray({\n          diff: true,\n        }),\n      },\n      Object: {\n        strict: eq.eqObject({\n          strict: true,\n        }),\n        loose: eq.eqObject({\n          loose: true,\n        }),\n        structure: eq.eqObject({\n          structure: true,\n        }),\n        diff: eq.eqObject({\n          diff: true,\n        }),\n      },\n    },\n    Object: {\n      Object: {\n        // возможно нужны будут Другие операции\n        strict: eq.eqObject({\n          strict: true,\n        }),\n        loose: eq.eqObject({\n          loose: true,\n        }),\n        structure: eq.eqObject({\n          structure: true,\n        }),\n        diff: eq.eqObject({\n          diff: true,\n        }),\n      },\n    },\n    Function: {\n      Function: {\n        strict(a, b) {\n          return a === b\n        },\n        loose(a, b) {\n          return a.toString() == b.toString()\n        },\n        structure: eq.true,\n        diff: eq.diffString,\n      },\n    },\n  }\n}\n","function set(data, path, value) {\n  if (typeof data === 'object') {\n    const parts = path.split('.')\n    if (Array.isArray(parts)) {\n      const curr = parts.shift()\n      if (parts.length > 0) {\n        if (!data[curr]) {\n          if (Number.isNaN(Number(parts[0]))) data[curr] = {}\n          else data[curr] = []\n        }\n        set(data[curr], parts.join('.'), value)\n      } else data[path] = value\n    } else {\n      data[path] = value\n    }\n  }\n}\n\nexports.set = set\n","function unfold(data, _result, _propName, stack) {\n  const result = _result || {}\n  const propName = _propName || ''\n  let i\n  let len\n\n  if (Array.isArray(data)) {\n    for (i = 0, len = data.length; i < len; i += 1) {\n      unfold(data[i], result, (propName ? `${propName}.` : '') + i, stack)\n    }\n  } else if (data && data.constructor === Object) {\n    const keys = Object.keys(data)\n    for (i = 0, len = keys.length; i < len; i += 1) {\n      unfold(\n        data[keys[i]],\n        result,\n        (propName ? `${propName}.` : '') + keys[i],\n        stack,\n      )\n    }\n  } else {\n    result[propName] = data\n  }\n  return result\n}\n\nexports.unfold = unfold\n","function unset(data, path) {\n  if (Array.isArray(data)) {\n    for (let i = 0, len = data.length; i < len; i += 1) {\n      unset(data[i], path)\n    }\n  } else if (typeof data === 'object') {\n    if (data[path] === undefined) {\n      const parts = path.split('.')\n      if (Array.isArray(parts)) {\n        const curr = parts.shift()\n        if (parts.length > 0) {\n          unset(data[curr], parts.join('.'))\n        } else {\n          delete data[curr]\n        }\n      }\n    } else {\n      delete data[path]\n    }\n  }\n}\n\nexports.unset = unset\n","module.exports = require(\"diff\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const comparator = require('./comparator')\n\nexports.getComparator = comparator.getComparator\nexports.strictEq = comparator.strictEq\nexports.looseEq = comparator.looseEq\nexports.structureEq = comparator.structureEq\nexports.diff = comparator.diff\nexports.fold = require('./fold').fold\nexports.unfold = require('./unfold').unfold\nexports.get = require('./get').get\nexports.set = require('./set').set\nexports.unset = require('./unset').unset\nexports.has = require('./has').has\n"],"names":["Equality","false","true","NOT_EQUAL","STRICT","LOOSE","STRUCTURE","diffValue","a","b","_comprator","result","value","valueOf","from","to","diffString","toString","eqObject","config","strict","source","dest","compare","ks","Object","keys","kd","key","i","len","length","loose","structure","ksd","sort","passed","diff","ret","kss","reorder","srcI","dstI","indexOf","order","removed","inserted","eqArray","val","foundItems","rec","cmpRes","found","j","dstlen","undefined","JSON","stringify","compareRatings","changeRating","approx","push","aFound","shift","every","v","Compariable","getComparator","type","cmpr","res","getType","prototype","call","match","exports","strictEq","fnc","looseEq","structureEq","set","fold","data","get","path","Array","isArray","parts","split","curr","join","has","jsdiff","cmp","eq","Boolean","Number","String","bFalse","test","bTrue","Undefined","Null","Date","Function","aFalse","aTrue","diffLines","srcLen","dstLen","unchangedCnt","removedCnt","removedLen","addedCnt","addedLen","forEach","part","added","changes","Math","abs","RegExp","toJSON","v0","v1","isNaN","unfold","_result","_propName","stack","propName","constructor","unset","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","comparator"],"sourceRoot":""}